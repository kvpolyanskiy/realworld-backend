buildscript {
    ext {
        springBootVersion = "2.7.6"
        springDependencyManagementVersion = "1.0.15.RELEASE"
        swaggerGeneratorPluginVersion = "2.19.2"
        swaggerCodegenVersion = "3.0.36"
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
    id 'org.hidetake.swagger.generator' version "$swaggerGeneratorPluginVersion"
}

group = 'kv.polyanskiy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    swaggerCodegen "io.swagger.codegen.v3:swagger-codegen-cli:$swaggerCodegenVersion"
}

swaggerSources {
    realworld {
        inputFile = file("src/main/resources/static/api/swagger/realworld-api.yaml")
        code {
            language = 'spring'
            configFile = file("src/main/resources/static/api/swagger/swagger-build-config.json")
            outputDir = file('build/generated/swagger-plugin')
            components = ['models', 'apis']
        }
    }
}

// add auto generation
compileJava.dependsOn swaggerSources.realworld.code

tasks.named('test') {
    useJUnitPlatform()
}
